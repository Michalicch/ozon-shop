export const debounce = (func, ms = 300) => {
	let timer 

	/**
	 * func - функция которая будет выполняться отложено, ms - мисекунды в течении которых нужно копить информацию и не выполнять функцию func  
	 * далее возвращаем все параметры которые нам возвращаются (...args) чистим таймер и создаем новый таймер 
	 * пока мы например печатаем символы в строке поиска в течении 300мс у нас не произойдет вызова функции,
	 * так как таймер будет создаваться снова, а прошлый таймер чиститься. 
	 */ 
	return (...args) => {
		clearTimeout(timer)
		timer = setTimeout(() =>{func.apply(this, args)}, ms)
	}
}